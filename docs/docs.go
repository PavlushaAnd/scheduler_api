// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get all Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "post": {
                "description": "create users",
                "parameters": [
                    {
                        "description": "body for user content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/:uid": {
            "get": {
                "description": "get user by uid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The key for staticblock",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "uid"
                        }
                    }
                }
            },
            "put": {
                "description": "update the user\ndelete the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The uid you want to update",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body for user content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The uid you want to delete",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "uid"
                        }
                    }
                }
            },
            "delete": {
                "description": "update the user\ndelete the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The uid you want to update",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body for user content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The uid you want to delete",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "uid"
                        }
                    }
                }
            }
        },
        "/login": {
            "get": {
                "description": "Logs user into the system",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The username for login",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The password for login",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "user"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Logs out current logged in user session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/task": {
            "get": {
                "description": "get all Tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                }
            },
            "post": {
                "description": "post task",
                "parameters": [
                    {
                        "description": "body for user content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/v1/task/:task_code": {
            "get": {
                "description": "get task by task_code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The key for staticblock",
                        "name": "task_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "task_code"
                        }
                    }
                }
            }
        },
        "/v1/taskDel/:task_code": {
            "delete": {
                "description": "delete the task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The uid you want to delete",
                        "name": "task_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "task_code"
                        }
                    }
                }
            }
        },
        "/v1/taskUpd/:task_code": {
            "put": {
                "description": "update the task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The task_code you want to update",
                        "name": "task_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body for task content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "task_code"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Task": {
            "type": "object",
            "properties": {
                "EndDate": {
                    "type": "string"
                },
                "StartDate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "task_code": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "task": {
                    "$ref": "#/definitions/models.Task"
                },
                "userCode": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
