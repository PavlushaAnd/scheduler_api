basePath: /api/v1
definitions:
  controllers.LoginParam:
    properties:
      password:
        type: string
      user_code:
        type: string
    type: object
  core.ModifyPwd:
    properties:
      new_pwd:
        type: string
      old_pwd:
        type: string
      user_code:
        type: string
    type: object
  core.UserDetailsWithPwd:
    properties:
      color_background:
        type: string
      color_text:
        type: string
      email_address:
        type: string
      has_confirmed_page:
        type: boolean
      has_posted_page:
        type: boolean
      has_recognised_page:
        type: boolean
      has_uploaded_page:
        type: boolean
      id:
        type: integer
      inactive:
        type: boolean
      password:
        type: string
      phone_no:
        type: string
      role:
        type: string
      user_code:
        type: string
      user_name:
        type: string
    type: object
  models.FTask:
    properties:
      description:
        type: string
      endDate:
        type: string
      hours:
        type: string
      location:
        type: string
      recEndDate:
        type: string
      recStartDate:
        description: need?
        type: string
      repeatable:
        type: string
      startDate:
        type: string
      task_code:
        type: string
      title:
        type: string
      userCode:
        type: string
    type: object
  utils.JSONStruct:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API fot scheduler application
  title: Scheduler Test API
  version: 1.0.0
paths:
  /:
    get:
      description: get all Tasks
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FTask'
    post:
      description: create single/recurrent Task
      parameters:
      - description: body for user content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.FTask'
      responses:
        "200":
          description: OK
          schema:
            type: success
        "403":
          description: Forbidden
          schema:
            type: error
  /:task_code:
    get:
      description: get task by task_code
      parameters:
      - description: The key for Task
        in: path
        name: task_code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FTask'
        "403":
          description: Forbidden
          schema:
            type: task_code
  /addorupd:
    post:
      description: add or update user
      parameters:
      - description: user detail
        in: body
        name: userDetail
        required: true
        schema:
          $ref: '#/definitions/core.UserDetailsWithPwd'
      - description: With the bearer in front
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
          schema:
            type: Bad
      security:
      - ApiKeyAuth: []
  /delete:
    delete:
      description: delete user
      parameters:
      - description: user code
        in: query
        name: userCode
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
          schema:
            type: Bad
      security:
      - ApiKeyAuth: []
  /login:
    post:
      description: login with user_code and password
      parameters:
      - description: loginParam
        in: body
        name: loginParam
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginParam'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
          schema:
            type: Bad
        "500":
          description: Internal Server Error
          schema:
            type: Internal
  /rstpasswd:
    post:
      description: reset password
      parameters:
      - description: reset user password
        in: body
        name: ModifyPwd
        required: true
        schema:
          $ref: '#/definitions/core.ModifyPwd'
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
          schema:
            type: Bad
      security:
      - ApiKeyAuth: []
  /taskDel/:task_code:
    delete:
      description: delete the task
      parameters:
      - description: The task_code you want to delete
        in: path
        name: task_code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: task_code
        "403":
          description: Forbidden
          schema:
            type: task_code
  /taskRecDel/:task_code:
    delete:
      description: delete recurrence by Task
      parameters:
      - description: The task_code you want to delete
        in: path
        name: task_code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: task_code
        "403":
          description: Forbidden
          schema:
            type: task_code
  /taskRecUpd/:task_code:
    post:
      description: update recurrence by Tasks (can receive FTask but will update only
        Title, Description and Location)
      parameters:
      - description: The task_code you want to update
        in: path
        name: task_code
        required: true
        type: string
      - description: body for task content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.FTask'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FTask'
        "403":
          description: Forbidden
          schema:
            type: error
  /taskUpd/:task_code:
    post:
      description: update the task
      parameters:
      - description: The task_code you want to update
        in: path
        name: task_code
        required: true
        type: string
      - description: body for task content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.FTask'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FTask'
        "403":
          description: Forbidden
          schema:
            type: error
  /updpasswd:
    post:
      description: Modify password
      parameters:
      - description: modify user password
        in: body
        name: ModifyPwd
        required: true
        schema:
          $ref: '#/definitions/core.ModifyPwd'
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
          schema:
            type: Bad
      security:
      - ApiKeyAuth: []
  /userlist:
    get:
      description: get user list
      parameters:
      - description: page index
        in: query
        name: pageindex
        required: true
        type: integer
      - description: page size
        in: query
        name: pagesize
        required: true
        type: integer
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
          schema:
            type: Bad
      security:
      - ApiKeyAuth: []
schemes:
- http
- https
swagger: "2.0"
