basePath: /v1
definitions:
  models.Task:
    properties:
      EndDate:
        type: string
      StartDate:
        type: string
      description:
        type: string
      id:
        type: integer
      location:
        type: string
      task_code:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      id:
        type: integer
      password:
        type: string
      task:
        $ref: '#/definitions/models.Task'
      userCode:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: beego application server
  termsOfService: http://swagger.io/terms
  title: Swagger API
  version: "1.0"
paths:
  /:
    get:
      description: get all Users
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
    post:
      description: create users
      parameters:
      - description: body for user content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: OK
          schema:
            type: int
        "403":
          description: Forbidden
          schema:
            type: body
  /:uid:
    delete:
      description: |-
        update the user
        delete the user
      parameters:
      - description: The uid you want to update
        in: path
        name: uid
        required: true
        type: string
      - description: body for user content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      - description: The uid you want to delete
        in: path
        name: uid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: uid
    get:
      description: get user by uid
      parameters:
      - description: The key for staticblock
        in: path
        name: uid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Forbidden
          schema:
            type: uid
    put:
      description: |-
        update the user
        delete the user
      parameters:
      - description: The uid you want to update
        in: path
        name: uid
        required: true
        type: string
      - description: body for user content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      - description: The uid you want to delete
        in: path
        name: uid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: uid
  /login:
    get:
      description: Logs user into the system
      parameters:
      - description: The username for login
        in: query
        name: username
        required: true
        type: string
      - description: The password for login
        in: query
        name: password
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: user
  /logout:
    get:
      description: Logs out current logged in user session
      responses:
        "200":
          description: OK
          schema:
            type: string
  /task:
    get:
      description: get all Tasks
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
    post:
      description: post task
      parameters:
      - description: body for user content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: body
  /task/:task_code:
    get:
      description: get task by task_code
      parameters:
      - description: The key for staticblock
        in: path
        name: task_code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "403":
          description: Forbidden
          schema:
            type: task_code
  /taskDel/:task_code:
    delete:
      description: delete the task
      parameters:
      - description: The uid you want to delete
        in: path
        name: task_code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: task_code
  /taskUpd/:task_code:
    put:
      description: update the task
      parameters:
      - description: The task_code you want to update
        in: path
        name: task_code
        required: true
        type: string
      - description: body for task content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "403":
          description: Forbidden
          schema:
            type: task_code
swagger: "2.0"
