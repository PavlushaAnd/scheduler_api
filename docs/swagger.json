{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API fot scheduler application",
        "title": "Scheduler Test API",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "get": {
                "description": "get all Tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.FTask"
                        }
                    }
                }
            },
            "post": {
                "description": "create single/recurrent Task",
                "parameters": [
                    {
                        "description": "body for user content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "success"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/:task_code": {
            "get": {
                "description": "get task by task_code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The key for Task",
                        "name": "task_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.FTask"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "task_code"
                        }
                    }
                }
            }
        },
        "/addorupd": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add or update user",
                "parameters": [
                    {
                        "description": "user detail",
                        "name": "userDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.UserDetailsWithPwd"
                        }
                    },
                    {
                        "type": "string",
                        "description": "With the bearer in front",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.JSONStruct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "Bad"
                        }
                    }
                }
            }
        },
        "/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user code",
                        "name": "userCode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "With the bearer in front",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.JSONStruct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "Bad"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "login with user_code and password",
                "parameters": [
                    {
                        "description": "loginParam",
                        "name": "loginParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.JSONStruct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "Bad"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "Internal"
                        }
                    }
                }
            }
        },
        "/rstpasswd": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "reset password",
                "parameters": [
                    {
                        "description": "reset user password",
                        "name": "ModifyPwd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.ModifyPwd"
                        }
                    },
                    {
                        "type": "string",
                        "description": "With the bearer in front",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.JSONStruct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "Bad"
                        }
                    }
                }
            }
        },
        "/taskDel/:task_code": {
            "delete": {
                "description": "delete the task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The task_code you want to delete",
                        "name": "task_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "task_code"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "task_code"
                        }
                    }
                }
            }
        },
        "/taskRecDel/:task_code": {
            "delete": {
                "description": "delete recurrence by Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The task_code you want to delete",
                        "name": "task_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "task_code"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "task_code"
                        }
                    }
                }
            }
        },
        "/taskRecUpd/:task_code": {
            "post": {
                "description": "update recurrence by Tasks (can receive FTask but will update only Title, Description and Location)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The task_code you want to update",
                        "name": "task_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body for task content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.FTask"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/taskUpd/:task_code": {
            "post": {
                "description": "update the task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The task_code you want to update",
                        "name": "task_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body for task content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.FTask"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/updpasswd": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Modify password",
                "parameters": [
                    {
                        "description": "modify user password",
                        "name": "ModifyPwd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.ModifyPwd"
                        }
                    },
                    {
                        "type": "string",
                        "description": "With the bearer in front",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.JSONStruct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "Bad"
                        }
                    }
                }
            }
        },
        "/userlist": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get user list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page index",
                        "name": "pageindex",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "With the bearer in front",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.JSONStruct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "Bad"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LoginParam": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user_code": {
                    "type": "string"
                }
            }
        },
        "core.ModifyPwd": {
            "type": "object",
            "properties": {
                "new_pwd": {
                    "type": "string"
                },
                "old_pwd": {
                    "type": "string"
                },
                "user_code": {
                    "type": "string"
                }
            }
        },
        "core.UserDetailsWithPwd": {
            "type": "object",
            "properties": {
                "color_background": {
                    "type": "string"
                },
                "color_text": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "has_confirmed_page": {
                    "type": "boolean"
                },
                "has_posted_page": {
                    "type": "boolean"
                },
                "has_recognised_page": {
                    "type": "boolean"
                },
                "has_uploaded_page": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "inactive": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "phone_no": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_code": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.FTask": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "hours": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "recEndDate": {
                    "type": "string"
                },
                "recStartDate": {
                    "description": "need?",
                    "type": "string"
                },
                "repeatable": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "task_code": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "userCode": {
                    "type": "string"
                }
            }
        },
        "utils.JSONStruct": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}